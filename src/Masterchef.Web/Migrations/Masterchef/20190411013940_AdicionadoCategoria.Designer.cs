// <auto-generated />
using System;
using Masterchef.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Masterchef.Web.Migrations.Masterchef
{
    [DbContext(typeof(MasterchefContext))]
    [Migration("20190411013940_AdicionadoCategoria")]
    partial class AdicionadoCategoria
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Masterchef.Domain.Categoria.Entity.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddDate");

                    b.Property<int>("CascadeMode");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Masterchef.Domain.Ingrediente.Entity.Ingrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddDate");

                    b.Property<int>("CascadeMode");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("UnidadeMedida")
                        .IsRequired();

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("Masterchef.Domain.Receita.Entity.Receita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddDate");

                    b.Property<int>("CascadeMode");

                    b.Property<Guid?>("CategoriaId");

                    b.Property<string>("Descricao");

                    b.Property<byte[]>("Imagem");

                    b.Property<string>("ModoPreparo");

                    b.Property<string>("Tags");

                    b.Property<string>("Titulo");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("Masterchef.Domain.Receita.Entity.ReceitaIngrediente", b =>
                {
                    b.Property<Guid>("ReceitaId");

                    b.Property<Guid>("IngredienteId");

                    b.Property<int>("Quantidade");

                    b.HasKey("ReceitaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("ReceitaIngrediente");
                });

            modelBuilder.Entity("Masterchef.Domain.Receita.Entity.Receita", b =>
                {
                    b.HasOne("Masterchef.Domain.Categoria.Entity.Categoria", "Categoria")
                        .WithMany("Receitas")
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("Masterchef.Domain.Receita.Entity.ReceitaIngrediente", b =>
                {
                    b.HasOne("Masterchef.Domain.Ingrediente.Entity.Ingrediente", "Ingrediente")
                        .WithMany("ReceitaIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Masterchef.Domain.Receita.Entity.Receita", "Receita")
                        .WithMany("ReceitaIngredientes")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
